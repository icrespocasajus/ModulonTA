% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/ModulonTA_functions.R
\name{target.analysis.heatmap}
\alias{target.analysis.heatmap}
\title{Plot modulon regulatory core and satellites target similarity, redundancy or overlap wrt specific connected components.}
\usage{
target.analysis.heatmap(
  net,
  mod,
  cc,
  mod.query,
  cc.query,
  feature = "Redundancy",
  sat,
  DA.data,
  DA = "Any",
  RegAUC,
  color = "YlGn",
  results.target.analysis.modulon
)
}
\arguments{
\item{net}{List R object with as many elements as the modulon connected components provided as the input. Each element of the list contains a character vector with satellite transcription factors.}

\item{mod}{List object with each modulon constituent elements.}

\item{cc}{List with the connected components generated with find.connected.components() or regulatory cores as the output of core()}

\item{mod.query}{Name of the query modulon.}

\item{cc.query}{Name of the connected component considered as modulon regulatory core.}

\item{feature}{Target analysis feature to be displayed; one of c("Redundancy","Similarity","Overlap").}

\item{sat}{Character vector with satellites.}

\item{DA.data}{Discriminant analysis results.}

\item{RegAUC}{Regulon activity matrix.}

\item{results.target.analysis.modulon}{Target analysis results.}
}
\value{
List object with as many elements as modulons; each element contain a heatmap.
}
\description{
Plot a heatmap displaying modulon target similarity, redundancy or overlap wrt specific connected components.
}
\details{
This function generates a heatmap to explore the results of the modulon target analysis
}
\examples{
\dontrun{
if(interactive()){
results.target.analysis.modulon =  target.analysis.modulon.wrt.cc.manual.query(net = network.TILs,mod = modulons.TILs,cc = cc.TILs,mod.query = '3',cc.query='cc.3')
plots = target.analysis.heatmap(
 net = network.TILs,
 mod = modulons.TILs,
 cc = cc.TILs,
 mod.query = '3',
 cc.query = 'cc.3',
 feature = 'Redundancy',
 sat = satellites.filtered,
 DA.data = DA.data.TILs,
 RegAUC = RegAUC.TILs,
 results.target.analysis.modulon = results.target.analysis.modulon)
 print(plots[['3']])
}
}
}
